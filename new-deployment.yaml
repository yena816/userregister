--- 
apiVersion: v1 
kind: Namespace 
metadata: 
  name: userregister 
--- 
apiVersion: apps/v1 
kind: Deployment 
metadata: 
  namespace: userregister 
  name: deployment-userregister 
spec: 
  selector: 
    matchLabels: 
      app.kubernetes.io/name: userregister 
  replicas: 5 
  template: 
    metadata:
      labels: 
        app.kubernetes.io/name: userregister 
    spec: 
      containers: 
      - image: 042988369477.dkr.ecr.us-east-1.amazonaws.com/userregister:latest 
        imagePullPolicy: Always 
        name: userregister 
        ports: 
        - containerPort: 80 
---
apiVersion: v1 
kind: Service 
metadata: 
  namespace: userregister 
  name: service-userregister 
spec: 
  ports: 
    - port: 80 
      targetPort: 80 
      protocol: TCP 
  selector: 
    app.kubernetes.io/name: userregister 
---
apiVersion: networking.k8s.io/v1 
kind: Ingress 
metadata: 
  namespace: userregister 
  name: ingress-userregister 
  annotations: 
    alb.ingress.kubernetes.io/scheme: internet-facing 
    kubernetes.io/ingress.class: "alb"
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP 
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-path: /usermgmt/health-status
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/success-codes: '200'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
spec: 
  rules: 
    - http: 
        paths: 
        - path: / 
          pathType: Prefix 
          backend: 
            service: 
              name: service-userregister 
              port:
                number: 80      